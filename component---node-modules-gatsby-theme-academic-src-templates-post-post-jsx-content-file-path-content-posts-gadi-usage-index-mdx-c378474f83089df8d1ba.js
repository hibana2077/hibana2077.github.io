"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[845],{8921:function(e,a,n){n.r(a),n.d(a,{default:function(){return H}});var t=n(5680),s=n(6540);function l(e){const a=Object.assign({h2:"h2",a:"a",span:"span",img:"img",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong"},(0,t.RP)(),e.components);return s.createElement(s.Fragment,null,s.createElement(a.h2,{id:"what-is-gadi"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#what-is-gadi"},s.createElement(a.span,{className:"icon icon-link"})),"What is Gadi?"),"\n",s.createElement(a.img,{src:"/files/1c4de3342f399004882f5d8e0cf22860/NCI_au.png",alt:"cover"}),"\n","\n",s.createElement(a.p,null,"Gadi is a high-performance computing (HPC) service provided by the National Computational Infrastructure (NCI) in Australia. It is designed to support a wide range of scientific and engineering applications, providing users with access to powerful computing resources."),"\n",s.createElement(a.p,null,"It is particularly useful for tasks that require significant computational power, such as simulations, data analysis, and machine learning."),"\n",s.createElement(a.p,null,"This guide provided a basic overview of how to use Gadi for high-performance computing tasks, including accessing the system, running Python scripts, managing dependencies, and monitoring job status."),"\n",s.createElement(a.h3,{id:"1-accessing-gadi"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#1-accessing-gadi"},s.createElement(a.span,{className:"icon icon-link"})),"1. Accessing Gadi"),"\n",s.createElement(a.p,null,"To access Gadi, you need to have an account and SSH access. Use the following command to connect:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token operator">&lt;</span>username<span class="token operator">></span>@gadi.nci.org.au</code></pre></div>'}}),"\n",s.createElement(a.p,null,"Then, system will prompt you for your password. Once logged in, you can start using the system."),"\n",s.createElement(a.h3,{id:"2-gadi-overview"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#2-gadi-overview"},s.createElement(a.span,{className:"icon icon-link"})),"2. Gadi Overview"),"\n",s.createElement(a.p,null,"Before we start using Gadi, let's take a look at some of the key components:"),"\n",s.createElement(a.h3,{id:"3-usage-example"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#3-usage-example"},s.createElement(a.span,{className:"icon icon-link"})),"3. Usage Example"),"\n",s.createElement(a.p,null,"In this section, we will run a simple Example to demonstrate how to use run those python scripts needs additional packages."),"\n",s.createElement(a.p,null,"First, go to ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/scratch/&lt;project_id>/&lt;username>/</code>'}})," directory:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /scratch/<span class="token operator">&lt;</span>project_id<span class="token operator">></span>/<span class="token operator">&lt;</span>username<span class="token operator">></span>/</code></pre></div>'}}),"\n",s.createElement(a.p,null,"Then, create a new directory(or git clone) for your project:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token function">mkdir</span> my_project\n<span class="token builtin class-name">cd</span> my_project</code></pre></div>'}}),"\n",s.createElement(a.p,null,"Next, add ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python3/python3.10.0</code>'}})," to your environment:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">module <span class="token function">add</span> python3/python3.10.0</code></pre></div>'}}),"\n",s.createElement(a.p,null,"Now, you can use ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">pip</code>'}})," to install ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">uv</code>'}}),", and use ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">uv</code>'}})," to create a virtual environment:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">pip3 <span class="token function">install</span> uv <span class="token parameter variable">--user</span></code></pre></div>'}}),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">uv venv</code></pre></div>'}}),"\n",s.createElement(a.p,null,"After that, you can activate the virtual environment:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token builtin class-name">source</span> venv/bin/activate <span class="token comment"># directory name may vary</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"Now, you can install any additional packages you need using ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">uv pip install</code>'}}),":"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">uv pip <span class="token function">install</span> requests\n\n<span class="token comment"># or</span>\n\nuv pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</code></pre></div>'}}),"\n",s.createElement(a.p,null,"When you are done, you can deactivate the virtual environment and create a job script to run your Python script on Gadi."),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">deactivate</code></pre></div>'}}),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>\n<span class="token comment">#PBS -P &lt;project_id></span>\n<span class="token comment">#PBS -q gpuvolta</span>\n<span class="token comment">#PBS -l ngpus=0</span>\n<span class="token comment">#PBS -l ncpus=1</span>\n<span class="token comment">#PBS -l mem=2GB</span>\n<span class="token comment">#PBS -l walltime=00:01:00</span>\n<span class="token comment">#PBS -l wd</span>\n<span class="token comment">#PBS -l storage=scratch/&lt;project_id></span>\n\n<span class="token builtin class-name">source</span> /scratch/<span class="token operator">&lt;</span>project_id<span class="token operator">></span>/<span class="token operator">&lt;</span>username<span class="token operator">></span>/venv/bin/activate\npython3 <span class="token parameter variable">-c</span> <span class="token string">"import requests; print(\'requests version:\', requests.__version__)"</span> <span class="token operator">>></span> output.txt</code></pre></div>'}}),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">qsub <span class="token parameter variable">-P</span> <span class="token operator">&lt;</span>project_id<span class="token operator">></span> job.sh</code></pre></div>'}}),"\n",s.createElement(a.h3,{id:"4-monitoring-your-job"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#4-monitoring-your-job"},s.createElement(a.span,{className:"icon icon-link"})),"4. Monitoring Your Job"),"\n",s.createElement(a.p,null,"After submitting your job, you can monitor its status using the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">qstat</code>'}})," command:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">qstat <span class="token parameter variable">-u</span> <span class="token operator">&lt;</span>username<span class="token operator">></span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"You may see below output:"),"\n",s.createElement(a.img,{src:"/files/6c04e99db7538142fa7d0c0beeed58cf/qstat_q.png",alt:"qstat status Queue"}),"\n",s.createElement(a.img,{src:"/files/6152eba317b82744989941e7c1bffd0e/qstat_r.png",alt:"qstat status Running"}),"\n",s.createElement(a.img,{src:"/files/eecfe46543a44ffd71759f098120fde4/qstat_e.png",alt:"qstat status Ended"}),"\n",s.createElement(a.p,null,"There are three main statuses:"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,s.createElement(a.strong,null,"Queue (Q)"),": The job is waiting to be scheduled."),"\n",s.createElement(a.li,null,s.createElement(a.strong,null,"Running (R)"),": The job is currently running."),"\n",s.createElement(a.li,null,s.createElement(a.strong,null,"Ended (E)"),": The job has completed."),"\n"),"\n",s.createElement(a.h3,{id:"5-accessing-output"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#5-accessing-output"},s.createElement(a.span,{className:"icon icon-link"})),"5. Accessing Output"),"\n",s.createElement(a.p,null,"You may notice that the output of your job is saved in the ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">output.txt</code>'}})," file in your project directory. You can view it using:"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token function">cat</span> output.txt\n<span class="token comment"># requests version: 2.32.4</span></code></pre></div>'}}),"\n",s.createElement(a.h3,{id:"6-conclusion"},s.createElement(a.a,{"aria-hidden":"true",tabIndex:"-1",href:"#6-conclusion"},s.createElement(a.span,{className:"icon icon-link"})),"6. Conclusion"),"\n",s.createElement(a.p,null,"This guide provides a basic overview of how to use Gadi for high-performance computing tasks. You can extend this by running more complex scripts, managing dependencies, and optimizing your workflows."))}var c=function(e){void 0===e&&(e={});const{wrapper:a}=Object.assign({},(0,t.RP)(),e.components);return a?s.createElement(a,e,s.createElement(l,e)):l(e)},r=n(6462),o=n(2532),i=n(5093),p=n.n(i),u=n(3603),m=n(6157),d=n(5035),g=n(5196),h=n(4388),E=n(5751),y=n(5816),b=n(266),v=n(8947),f=n.n(v),k=n(6386),_=n.n(k),x=n(1583),w=n(2011),S=n(2394),I=n(9073),T=n(2888),A=n(5413),M=n(2957);function j(e){let{data:{mdx:a},children:n}=e;const{fields:{slug:{html:t,nonce:l,htmlEncrypted:c,title:i,excerpt:v,path:k,date:j,commit:H,type:L}},frontmatter:{cover:N},tableOfContents:P}=a,q=p().unix(H).format("MMM Do YYYY"),B=A.A.formatDate(j),C=N?(0,o.c)(N):null,G=(0,T.Q6)(),O=A.A.generateFullUrl(G,k);console.log(l);const{0:Y,1:F}=(0,s.useState)({locked:""!==l,failed:!1,html:t}),[R,U]=s.useState(!1),[J,Q]=s.useState(""),D=()=>{U(!R)},W=e=>{Q(e)},z=()=>{if(Y.locked)try{const e=_().decodeUTF8(J),a=_().decodeBase64(l),n=f().hash(e).slice(0,f().secretbox.keyLength),t=_().decodeBase64(c),s=f().secretbox.open(t,a,n),r=_().encodeUTF8(s);F({locked:!1,failed:!1,html:r})}catch(e){F({locked:!0,failed:!0,html:""})}},$=[];B&&$.push(`Posted: ${B}`),H>0&&B!==q&&$.push(`Edited: ${q}`);const K=(0,s.useContext)(I.Ay),V=(0,r.useLocation)();(0,s.useEffect)(()=>{K&&K.setState&&Object.getOwnPropertyNames(P).length&&K.setState({tableOfContents:P,pathname:V.pathname})},[]);const X=()=>Y.locked?s.createElement(u.A,{description:""},s.createElement(m.A,{fluid:!0},s.createElement(d.A,{justify:"center",type:"flex"},s.createElement(g.A,{xs:24,sm:24,md:24,lg:16,xl:12},Y.failed?s.createElement(h.A,{type:"error"},"Wrong password! Please try again."):s.createElement(h.A,{type:"info"},"This article is encrypted by xsalsa20-poly1305 algorithm."),s.createElement(E.A,{style:{marginTop:"1rem"}},s.createElement(y.A,{type:R?"text":"password",value:J,placeholder:"Enter password to unlock this article.",onPressEnter:z,onChange:W,size:"lg"}),s.createElement(E.A.Button,{onClick:D},R?s.createElement(M.A,{icon:"eye"}):s.createElement(M.A,{icon:"eye-slash"}))))))):s.createElement("article",{className:"markdown-body"},n),Z=()=>s.createElement("article",{className:"markdown-body"},n);return s.createElement(s.Fragment,null,s.createElement(S.A,{title:i,description:v,path:k,keywords:["FullStack developer","Javascript","ReactJS","NodeJS","Gatsby","technology"]}),s.createElement("div",null,s.createElement("div",{className:"marginTopTitle"},s.createElement("h1",{className:"titleSeparate"},i)),s.createElement("div",{style:{color:"var(--rs-text-tertiary)",marginBottom:"1rem"}},$.join(", ")),s.createElement(b.A,{style:{marginBottom:"1rem"}},s.createElement(b.A.Item,{as:g.A,xs:24,sm:24,md:C?12:24,lg:C?16:24},s.createElement(x.A,{title:"Abstract",style:{height:"100%"}},s.createElement("p",{style:{marginBottom:"0"},dangerouslySetInnerHTML:{__html:A.A.parseMarkDown(v,!0)}}))),C?s.createElement(b.A.Item,{as:g.A,xs:24,sm:24,md:12,lg:8},s.createElement("div",{style:{height:"100%"}},s.createElement(o.G,{image:C,title:i,alt:i}))):null),""===l?s.createElement(Z):s.createElement(X)),"posts"===L?s.createElement("div",{style:{marginTop:"2rem"}},s.createElement(w.A,{pageCanonicalUrl:O,pageId:i})):null)}function H(e){return s.createElement(j,e,s.createElement(c,e))}}}]);
//# sourceMappingURL=component---node-modules-gatsby-theme-academic-src-templates-post-post-jsx-content-file-path-content-posts-gadi-usage-index-mdx-c378474f83089df8d1ba.js.map